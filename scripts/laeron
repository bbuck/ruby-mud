#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'active_support/core_ext/string/inflections'

class Command
  attr_accessor :usage, :description
  attr_reader :name

  def initialize(name)
    @name = name
    @action = nil
  end

  def to_help_s
    "\t#{name}\t#{description}"
  end

  def help
    [
      "",
      "#{name} - #{description}",
      "",
      "\t#{usage}",
      "\n"
    ].join("\n")
  end

  def action(&block)
    if block_given?
      @action = block
    else
      @action
    end
  end
end

class Program
  attr_accessor :name, :version, :description, :author

  def initialize
    @commands = {}
  end

  def command(name, &block)
    cmd = Command.new(name)
    yield cmd if block_given?
    @commands[name] = cmd
  end

  def help
    [
      "",
      "#{name} - v #{version}",
      description,
      "",
      "commands:",
      "",
      command_string,
      "",
      author,
      "\n"
    ].join("\n")
  end

  def process
    if ARGV.length == 0 || (ARGV.length == 1 && ARGV[0].downcase == "help")
      puts help
      exit(0)
    else ARGV.length >= 1
      help = false
      if ARGV[0] == "help"
        help = true
        ARGV.shift
      end
      cmd_name = ARGV.shift
      if cmd = @commands[cmd_name.to_sym]
        if help
          puts cmd.help
        else
          if cmd.action.arity == 1
            cmd.action.call(ARGV)
          else
            cmd.action.call
          end
        end
      else
        puts "ERROR: No command \"#{cmd_name}\" exists"
      end
    end
  end

  private

  def command_string
    @commands.map { |_, cmd| cmd.to_help_s }.join("\n")
  end
end

program = Program.new

program.name = "LaeronMUD Server"
program.version = "1.0.0"
program.description = "CLI for building and running LaeronMUD Server."
program.author = "Brandon Buck <lordizuriel@gmail.com>"

program.command :run do |c|
  c.usage = "laeron run"
  c.description = "Run the LaeronMUD server and allow players to connect and play."
  c.action do
    require './main'
    Laeron.start_server
  end
end

program.command :console do |c|
  c.usage = "laeron console"
  c.description = "Run a PRY console session with the LaeronMUD environment loaded."
  c.action do
    require "./main"
    Pry.start
  end
end

program.command :migrate do |c|
  c.usage = "laeron migrate <name_underscored>"
  c.description = "Create an empty migration file in the db/migrate folder with the given name."
  c.action do |args|
    name = args[0]
    File.open "db/migrate/#{Time.now.to_i}_#{name}.rb", "w:utf-8" do |f|
      f.write "class #{name.classify} < ActiveRecord::Migration\n"
      f.write "  def change\n"
      f.write "  end\n"
      f.write "end\n"
    end
  end
end

program.process